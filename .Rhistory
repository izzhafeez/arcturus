fit<-sapply(seq(3,51,2),function(k){
model<-knn3(Survived~.,data=train_set,k=k)
guess<-predict(model,test_set)
mean(guess==test_set$Survived)
})
ggplot(fit)
fit
fit<-sapply(seq(3,51,2),function(k){
model<-knn3(Survived~.,data=train_set,k=k)
guess<-predict(model,test_set)
mean(guess==test_set$Survived)
print(guess)
})
train_knn <- train(Survived ~ .,
method = "knn",
data = train_set,
tuneGrid = data.frame(k = seq(3, 51, 2)))
train_knn
ggplot(train_knn)
train_knn$bestTune
set.seed(14,sample.kind = 'Rounding')
model<-train(Survived~.,data=train_set,method='rf',tuneGrid=data.frame(mtry=1:7))
model
varImp(model)
predict(model,test_set)
guess<-predict(model,test_set)
guess==test_set$Survived
test_set$Survived
mean(guess==factor(test_set$Survived))
factor(test_set$Survived)
mean(as.numeric(guess)==test_set$Survived)
models <- c("glm", "lda", "naive_bayes", "svmLinear", "knn", "gamLoess", "multinom", "qda", "rf", "adaboost")
library(caret)
library(dslabs)
set.seed(1,sample.kind = 'Rounding')
data("mnist_27")
fits <- lapply(models, function(model){
print(model)
train(y ~ ., method = model, data = mnist_27$train)
})
fits <- lapply(models, function(model){
print(model)
train(y ~ ., method = model, data = mnist_27$train)
})
fits
sapply(models,function(x){
predict(x,test_set)
})
sapply(models,function(x){
print(x)
})
print(models[1])
sapply(fits,function(x){
})
predict(x,test_set)
sapply(fits,function(x){
predict(x,test_set)
})
fits[1]
fits[[1]]
lapply(fits,function(x){
predict(x,test_set)
})
sapply(fits,function(x){
predict(x,test_set)
})
fits[[1]]
fits[[1]]$method
fits[[1]]$pred
sapply(fits,function(x){
predict(x$pred,test_set)
})
sapply(fits,function(x){
print(x)
predict(x,test_set)
})
sapply(fits,function(x){
print(x)
predict(x,mnist_27$test)
})
sapply(fits,function(x){
dim(predict(x,mnist_27$test))
})
sapply(fits,function(x){
predict(x,mnist_27$test)
})
sapply(fits,function(x){
nrow(predict(x,mnist_27$test))
})
sapply(fits,function(x){
predict(x,mnist_27$test)
})
mnist_test$test
mnist_27$test
mnist_27$test$y
sapply(fits,function(x){
guess<-predict(x,mnist_27$test)
mean(mnist_27$test$y==guess)
})
mean(sapply(fits,function(x){
guess<-predict(x,mnist_27$test)
mean(mnist_27$test$y==guess)
}))
mean(sapply(fits,function(x){
guess<-predict(x,mnist_27$test)
mean(mnist_27$test$y==guess)
}))
set.seed(1,sample.kind = 'Rounding')
mean(sapply(fits,function(x){
guess<-predict(x,mnist_27$test)
mean(mnist_27$test$y==guess)
}))
fit[[1]]
fits[[1]]
fits[[1]]$coefnames
fits[[1]]$x_1
fits[[1]]$pred
fits[[1]]$call
fits[[1]]$metric
fits[[1]]$Accuracy
fits[[1]][[1]]
mean(sapply(fits,function(x){
guess<-predict(x,mnist_27$test)
mean(mnist_27$test$y==guess)
}))
predict(fits[[1]],mnist_27$test)
predict(fits[[1]],mnist_27$test)$census
predict(fits[1],mnist_27$test)$census
predict(fits[1],mnist_27$test)$census
mnist_27$test
predict(fits[1],mnist_27$test)
predict(fits[[1]],mnist_27$test)
predict(fits[[1]],mnist_27$test)$census
predict(fits[[1]],mnist_27$test[,col_index])$census
predict(fits[[1]],mnist_27$test)$census
mnist_27
data('movielens')
movielens
movielens$title=='The Shawshank Redemption'
movielens[movielens$title=='The Shawshank Redemption']
movielens%>%filter(title=='The Shawshank Redemption')
movielens$title
sum(movielens$title=='The Shawshank Redemption')
movielens%>%filter(title=='Batman Forever')
movielens%>%filter(title=='The Shawshank Redemption')
movielens%>%filter(title%in%'The Shawshank Redemption')
movielens%>%filter('The Shawshank Redemption'%in%title)
movielens%>%filter('Shawshank'%in%title)
movielens%>%filter('Batman'%in%title)
movielens%>%filter('Dumbo'%in%title)
movielens%>%filter(c('Dumbo')%in%title)
movielens%>%filter(grepl('Shawshank',title))
movielens%>%filter(grepl('Shawshank',title))%>%summarize(mean(rating))
movielens%>%filter(grepl('Forrest',title))%>%summarize(n(rating))
movielens%>%filter(grepl('Forrest',title))%>%group_by(year)%>%summarize(n())
(341+26)/2
movielens%>%filter(grepl('Forrest',title))
movielens$year
range(movielens$year)
range(movielens$year)
min(movielens$year)
min(numeric(movielens$year))
min(as.numeric(movielens$year))
movielens$year
sum(movielens$year)
unique(movielens$year)
movielens%>%filter(grepl('Forrest',title),year=>1993)%>%group_by(year)%>%summarize(n())
movielens%>%filter(grepl('Forrest',title),year>1993)%>%group_by(year)%>%summarize(n())
movielens%>%filter(grepl('Forrest',title),year>1992)%>%group_by(year)%>%summarize(n())
2018-1992
(341+26)/26
>
movielens %>%
filter(year >= 1993) %>%
group_by(movieId) %>%
summarize(n = n(), years = 2018 - first(year),
title = title[1],
rating = mean(rating)) %>%
mutate(rate = n/years) %>%
top_n(25, rate) %>%
arrange(desc(rate))
movielens %>%
filter(year >= 1993) %>%
group_by(movieId) %>%
summarize(n = n(), years = 2018 - first(year),
title = title[1],
rating = mean(rating)) %>%
mutate(rate = n/years) %>%
top_n(25, rate) %>%
arrange(desc(rate))%>%ggplot()+geom_point(aes(x=rating,y=rate))
movielens %>%
filter(year >= 1993) %>%
group_by(movieId) %>%
summarize(n = n(), years = 2018 - first(year),
title = title[1],
rating = mean(rating)) %>%
mutate(rate = n/years) %>%
top_n(25, rate) %>%
arrange(desc(rate))%>%ggplot()+geom_point(aes(y=rating,x=rate))
movielens %>%
filter(year >= 1993) %>%
group_by(movieId) %>%
summarize(n = n(), years = 2018 - first(year),
title = title[1],
rating = mean(rating)) %>%
mutate(rate = n/years) %>%
top_n(25, rate) %>%
arrange(desc(rate))%>%ggplot()+geom_point(aes(y=rating,x=rate))+geom_smooth()
movielens %>%
filter(year >= 1993) %>%
group_by(movieId) %>%
summarize(n = n(), years = 2018 - first(year),
title = title[1],
rating = mean(rating)) %>%
mutate(rate = n/years) %>%
top_n(25, rate) %>%
arrange(desc(rate))%>%ggplot()+geom_point(aes(y=rating,x=rate))+geom_smooth()
movielens %>%
filter(year >= 1993) %>%
group_by(movieId) %>%
summarize(n = n(), years = 2018 - first(year),
title = title[1],
rating = mean(rating)) %>%
mutate(rate = n/years) %>%
top_n(25, rate) %>%
arrange(desc(rate))%>%ggplot(aes(rate,rating))+geom_point()+geom_smooth()
movielens$timestamp
movielens%>%mutate(date=as.date(timestamp))
movielens%>%mutate(date=as.date(timestamp))
movielens%>%mutate(date=as.data(timestamp))
library(lubridate)
movielens%>%mutate(date=as.date(timestamp))
movielens%>%mutate(date=as_datetime(timestamp))
movielens%>%group_by(round_date(date))
movielens%>%group_by(round_date(date,unit='week'))
movielens%>%group_by(round_date(date,unit='weeks'))
movielens%>%group_by(round_date(date,'week'))
movielens%>%round_date(date,'week')
movielens%>%round_date(.$date,'week')
movielens%>%filter(rounded=round_date(date,'week'))
movielens%>%mutate(rounded=round_date(date,'week'))
library(round_date)
movielens%>%mutate(rounded=round_date(date,'week'))
movielens%>%mutate(rounded=round_date(date,unit='week'))
movielens%>%mutate(date=round_date(date,unit='week'))
library(lubridate)
movielens%>%mutate(date=round_date(date,unit='week'))
movielens%>%filter(year >= 1993)%>%mutate(date=round_date(date,unit='week'))
movielens %>% mutate(date = round_date(date, unit = "week")) %>%
group_by(date) %>%
summarize(rating = mean(rating)) %>%
ggplot(aes(date, rating)) +
geom_point() +
geom_smooth()
data(movielens)
movielens %>% mutate(date = round_date(date, unit = "week")) %>%
group_by(date) %>%
summarize(rating = mean(rating)) %>%
ggplot(aes(date, rating)) +
geom_point() +
geom_smooth()
movielens %>% mutate(date = lubridate.round_date(date, unit = "week")) %>%
group_by(date) %>%
summarize(rating = mean(rating)) %>%
ggplot(aes(date, rating)) +
geom_point() +
geom_smooth()
movielens %>% mutate(date = round_date(date, unit = "week")) %>%
group_by(date) %>%
summarize(rating = mean(rating)) %>%
ggplot(aes(date, rating)) +
geom_point() +
geom_smooth()
round_date(movielens$date[1])
movielens %>% filter(year >= 1993)%>%mutate(date = round_date(date, unit = "week")) %>%
group_by(date) %>%
summarize(rating = mean(rating)) %>%
ggplot(aes(date, rating)) +
geom_point() +
geom_smooth()
movielens %>% filter(year >= 1993)%>%mutate(date = round_date(date, unit = "week")) %>%
group_by(date) %>%
summarize(rating = mean(rating)) %>%
ggplot(aes(date, rating)) +
geom_point() +
geom_smooth()
round_date(movielens$date)
round_date(movielens%>%filter(year>=1993)$date)
round_date(movielens%>%filter(year>=1993)%>%select(date))
movielens%>%filter(year>=1993)%>%select(date)
library(dplyr)
movielens %>% filter(year >= 1993)%>%mutate(date = round_date(date, unit = "week")) %>%
group_by(date) %>%
summarize(rating = mean(rating)) %>%
ggplot(aes(date, rating)) +
geom_point() +
geom_smooth()
data(movielens)
movielens
movielens<-movielens%>%mutate(date=as_datetime(timestamp))
movielens %>% filter(year >= 1993)%>%mutate(date = round_date(date, unit = "week")) %>%
group_by(date) %>%
summarize(rating = mean(rating)) %>%
ggplot(aes(date, rating)) +
geom_point() +
geom_smooth()
movielens%>%filter(year >= 1993)%>%mutate(date=round_date(date,unit='week'))
movielens$genres
unique(movielens$genres)
movielens$genres
movielens%>%group_by(genres)
movielens%>%group_by(genres)%>%summarize(avg=mean(rating),se=se(rating))
movielens%>%group_by(genres)%>%summarize(avg=mean(rating),se=sd(rating))
movielens%>%group_by(genres)%>%summarize(avg=mean(rating),se=sd(rating))%>%arrange(desc(avg))
movielens%>%group_by(genres)%>%summarize(avg=mean(rating),se=sd(rating),n=n())%>%filter(n>1000)%>%arrange(desc(avg))
movielens%>%group_by(genres)%>%summarize(avg=mean(rating),se=sd(rating),n=n())%>%filter(n>1000)%>%arrange(asc(avg))
movielens%>%group_by(genres)%>%summarize(avg=mean(rating),se=sd(rating),n=n())%>%filter(n>1000)%>%arrange(avg)
set.seed(1986,sample.kind='Rounding')
n <- round(2^rnorm(1000, 8, 1))
set.seed(1986,sample.kind='Rounding')
mu <- round(80 + 2*rt(1000, 5))
range(mu)
schools <- data.frame(id = paste("PS",1:1000),
size = n,
quality = mu,
rank = rank(-mu))
schools
schools %>% top_n(10, quality) %>% arrange(desc(quality))
set.seed(1986,sample.kind='Rounding')
mu <- round(80 + 2*rt(1000, 5))
scores <- sapply(1:nrow(schools), function(i){
scores <- rnorm(schools$size[i], schools$quality[i], 30)
scores
})
schools <- schools %>% mutate(score = sapply(scores, mean))
schools
schools%>%arrange(rank)
schools%>%arrange(score)
schools%>%arrange(desc(score))
schools%>%filter(id=='PS 745')
schools%>%arrange(desc(score))
set.seed(1986,sample.kind='Rounding')
n <- round(2^rnorm(1000, 8, 1))
set.seed(1,sample.kind='Rounding')
range(mu)
schools <- data.frame(id = paste("PS",1:1000),
size = n,
quality = mu,
rank = rank(-mu))
schools %>% top_n(10, quality) %>% arrange(desc(quality))
set.seed(1,sample.kind='Rounding')
mu <- round(80 + 2*rt(1000, 5))
scores <- sapply(1:nrow(schools), function(i){
scores <- rnorm(schools$size[i], schools$quality[i], 30)
scores
})
schools <- schools %>% mutate(score = sapply(scores, mean))
schools%>%arrange(desc(score))
set.seed(1986,sample.kind='Rounding')
n <- round(2^rnorm(1000, 8, 1))
set.seed(1,sample.kind='Rounding')
mu <- round(80 + 2*rt(1000, 5))
range(mu)
schools <- data.frame(id = paste("PS",1:1000),
size = n,
quality = mu,
rank = rank(-mu))
schools %>% top_n(10, quality) %>% arrange(desc(quality))
set.seed(1,sample.kind='Rounding')
mu <- round(80 + 2*rt(1000, 5))
scores <- sapply(1:nrow(schools), function(i){
scores <- rnorm(schools$size[i], schools$quality[i], 30)
scores
})
schools <- schools %>% mutate(score = sapply(scores, mean))
schools%>%arrange(desc(score))
schools%>%summarize(median(size))
schools%>%top_n(10,score)%>%summarize(median(size))
schools%>%top_n(10,score)
schools%>%top_n(10,score)%>%summarize(median(size))
schools%>%top_n(10,score)%>%arrange(score)%>%summarize(median(size))
schools%>%top_n(10,score)%>%arrange(score)
schools%>%top_n(10,score)%>%arrange(score)%>%summarize(median(size))
schools%>%arrange(score)
schools%>%arrange(desc(score))
schools%>%top_n(10,score)%>%arrange(score)
schools%>%arrange(desc(score))
schools%>%top_n(10,score)%>%arrange(score)
schools%>%arrange(desc(score))$size
schools%>%arrange(desc(score))%>%select(size)
schools%>%top_n(10,score)%>%select(size)
median(schools%>%top_n(10,score)%>%select(size))
hello<-schools%>%top_n(10,score)%>%select(size)
median(hello)
median(hello$size)
schools%>%bottom_n(10,score)%>%summarize(median(size))
schools%>%top_n(10,desc(score))%>%summarize(median(size))
schools%>%top_n(10,score)%>%summarize(median(size))
overall <- mean(sapply(scores, mean))
overall
schools<-schools%>%mutate(adjusted=score*size/(size+25))
schools%>%top_n(10,adjusted)
schools%>%top_n(10,adjusted)%>%arrange(adjusted)
alpha <- 25
score_reg <- sapply(scores, function(x)  overall + sum(x-overall)/(length(x)+alpha))
schools %>% mutate(score_reg = score_reg) %>%
top_n(10, score_reg) %>% arrange(desc(score_reg))
alpha <- 10:250
alpha <- 10:250
sapply(alpha,function(y){
score_reg <- sapply(scores, function(x)  overall + sum(x-overall)/(length(x)+y))
schools<-schools %>% mutate(score_reg = score_reg)
rmse(schools$score_reg,schools$quality)
})
RMSE(schools$score_reg,schools$quality)
sapply(alpha,function(y){
score_reg <- sapply(scores, function(x)  overall + sum(x-overall)/(length(x)+y))
schools<-schools %>% mutate(score_reg = score_reg)
RMSE(schools$score_reg,schools$quality)
})
sapply(alpha,function(y){
score_reg <- sapply(scores, function(x)  overall + sum(x-overall)/(length(x)+y))
schools<-schools %>% mutate(score_reg = score_reg)
RMSE(schools$score_reg,schools$quality)%>%ggplot()
})
sapply(alpha,function(y){
score_reg <- sapply(scores, function(x)  overall + sum(x-overall)/(length(x)+y))
schools<-schools %>% mutate(score_reg = score_reg)
res<-RMSE(schools$score_reg,schools$quality)
})%>%ggplot(aes(alpha,res))
sapply(alpha,function(y){
score_reg <- sapply(scores, function(x)  overall + sum(x-overall)/(length(x)+y))
schools<-schools %>% mutate(score_reg = score_reg)
RMSE(schools$score_reg,schools$quality)
})%>%ggplot(aes(alpha,.))
res<-sapply(alpha,function(y){
score_reg <- sapply(scores, function(x)  overall + sum(x-overall)/(length(x)+y))
schools<-schools %>% mutate(score_reg = score_reg)
RMSE(schools$score_reg,schools$quality)
})
ggplot(aes(alpha,res))
ggplot(aes(alpha,res))
ggplot(aes(x=alpha,y=res))
ggplot(aes(x=alpha,y=res))+geom_line()
res
alpha <- 10:250
res<-sapply(alpha,function(y){
score_reg <- sapply(scores, function(x)  overall + sum(x-overall)/(length(x)+y))
schools<-schools %>% mutate(score_reg = score_reg)
RMSE(schools$score_reg,schools$quality)
})
res
res<-sapply(alpha,function(y){
score_reg <- sapply(scores, function(x)  overall + sum(x-overall)/(length(x)+y))
schools<-schools %>% mutate(score_reg = score_reg)
RMSE(schools$quality,schools$score_reg)
})
res
schools
res<-sapply(alpha,function(y){
score_reg <- sapply(scores, function(x)  overall + sum(x-overall)/(length(x)+y))
schools<-schools %>% mutate(score_reg = score_reg)
RMSE(schools$quality,schools$score_reg)
})
res
max(res)
alpha
plot(alpha,res)
alpha[which.min(res)]
score_reg<-sapply(scores,function(x){overall+sum(x-overall)/(length(x)+135)})
schools<-schools%>%mutate(score_reg=score_reg)
schools%>%arrange(score_reg)
schools%>%arrange(desc(score_reg))
res<-sapply(alpha,function(y){
schools<-schools%>%mutate(adjusted=score*size/(size+y))
RMSE(schools$quality,schools$adjusted)
})
alpha[which.min(res)]
set.seed(1987,sample.kind = 'Rounding')
n <- 100
k <- 8
Sigma <- 64  * matrix(c(1, .75, .5, .75, 1, .5, .5, .5, 1), 3, 3)
m <- MASS::mvrnorm(n, rep(0, 3), Sigma)
m <- m[order(rowMeans(m), decreasing = TRUE),]
y <- m %x% matrix(rep(1, k), nrow = 1) + matrix(rnorm(matrix(n*k*3)), n, k*3)
colnames(y) <- c(paste(rep("Math",k), 1:k, sep="_"),
paste(rep("Science",k), 1:k, sep="_"),
paste(rep("Arts",k), 1:k, sep="_"))
my_image <- function(x, zlim = range(x), ...){
colors = rev(RColorBrewer::brewer.pal(9, "RdBu"))
cols <- 1:ncol(x)
rows <- 1:nrow(x)
image(cols, rows, t(x[rev(rows),,drop=FALSE]), xaxt = "n", yaxt = "n",
xlab="", ylab="",  col = colors, zlim = zlim, ...)
abline(h=rows + 0.5, v = cols + 0.5)
axis(side = 1, cols, colnames(x), las = 2)
}
my_image(y)
my_image(cor(y), zlim = c(-1,1))
range(cor(y))
axis(side = 2, 1:ncol(y), rev(colnames(y)), las = 2)
s <- svd(y)
names(s)
y_svd <- s$u %*% diag(s$d) %*% t(s$v)
max(abs(y - y_svd))
y
ss_y<-lapply(y,function(x){
x^2
})
ss_y
data("tissue_gene_expression")
tissue_gene_expression
